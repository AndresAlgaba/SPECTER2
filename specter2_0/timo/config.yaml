config_version: 1.0.0
model_variants:
  specter2_0: 
    # Class path to pydantic Instance implementation in <model_package_name>==<model_package_version>
    instance: specter2_0.timo.interface.Instance

    # Class path to pydantic Prediction implementation in <model_package_name>==<model_package_version>
    prediction: specter2_0.timo.interface.Prediction

    # Class path to Predictor implementation in <model_package_name>==<model_package_version>
    predictor: specter2_0.timo.interface.Predictor

    # Class path to pydantic PredictorConfig implementation in <model_package_name>==<model_package_version>
    predictor_config: specter2_0.timo.interface.PredictorConfig

    # One or more bash commands to execute as part of a RUN step in a Dockerfile.
    # Leave this unset unless your model has special system requirements beyond
    # those in your setup.py.
    docker_run_commands: []

    # Any additional sets of dependencies required by the model.
    # These are the 'extras_require' keys in your setup.py.
    extras_require: ["timo"]

    # Full S3 path to tar.gz'ed artifacts archive, nullable
    artifacts_s3_path: "s3://ai2-s2-research-public/specter2_0/specter2_0.tar.gz"

    # Version of python required for model runtime, e.g. 3.7, 3.8, 3.9
    python_version: "3.8"

    # Whether this model supports CUDA GPU acceleration
    cuda: true

    # One of the versions here: https://gitlab.com/nvidia/container-images/cuda/blob/master/doc/supported-tags.md#ubuntu2004, but less than 11.4.3.
    # If cuda=True and cuda_version is unspecified, defaults to 11.4.2.
    cuda_version: 11.5.0

    # Python path to a fn in <model_package_name>==<model_package_version> that
    # returns a unittest.TestCase. Builder function receives a model container
    # as its sole argument.
    # Used by the TIMO toolchain to validate your model implementation and configuration.
    integration_test: specter2_0.timo.integration_test.TestInterfaceIntegration

